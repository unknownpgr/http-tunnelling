const net=require("net"),crypto=require("crypto"),[applicationAddr]=process.argv.slice(2);function parseAddress(n){var[n,e]=n.split(":");return[n,e?parseInt(e):80]}const[serverIp,serverPort]=parseAddress("server.unknownpgr.com:81"),[applicationIp,applicationPort]=parseAddress(applicationAddr),clientId=crypto.randomBytes(36).toString("hex");function connect(t){return new Promise((n,e)=>{const o=net.connect(t,()=>{n(o)})})}function join(o){return new Promise((n,e)=>{o.on("close",()=>{n()})})}async function main(){for(;;){const r=await connect({port:serverPort,host:serverIp});r.write(clientId),console.log(`Connected to ${serverIp}:`+serverPort);let o=!1,t;r.on("data",n=>{t||((t=net.createConnection(applicationPort,applicationIp,()=>{console.log("Connected to application")})).pipe(r),r.pipe(t),t.on("close",()=>{console.log("Disconnected from application"),r.unpipe(t),t=null}));var e,n=n.toString();o||([n,e]=n.split("|"),console.log(n),e&&t.write(e),o=!0)}),await join(r)}}main();